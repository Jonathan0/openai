version: 2.1

jobs:
  build-openai:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - checkout
      - run:
          name: 'Install Chrome Browser'
          command: |
            sudo apt update
            wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo apt install ./google-chrome-stable_current_amd64.deb -y
            rm ./google-chrome-stable_current_amd64.deb
      - run:
          name: 'Build and Run OpenAI'
          background: true
          command: |
            npm install
            npm run dev && sleep 360
      - run:
          name: 'Install Cypress and Run UI Tests'
          command: |
            npm install
            sleep 15
            npm run test
      - store_test_results:
          path: ~/project/cypress/result.xml
      - store_artifacts:
          path: ~/project/cypress/videos

#  sonar-scan:
#    docker:
#      - image: 'circleci/openjdk:11-jdk'
#    steps:
#      - checkout
#      - run:
#          name: Analyze on SonarCloud
#          command: ./gradlew clean build sonarqube

#  build-docker:
#    machine:
#      image: ubuntu-2004:202104-01
#    steps:
#      - checkout
#      - attach_workspace:
#          at: .
#      - run:
#          name: 'Build Docker: truck-api-framework'
#          command: |
#            echo The Docker tag is ${CIRCLE_SHA1:0:6}
#            docker build -f dockerfile/Dockerfile -t truck-api-framework:latest -t truck-api-framework:${CIRCLE_SHA1:0:6} .
#      - run:
#          name: 'Publish to my private docker hub'
#          command: |
#            docker login --username $DOCKER_USER --password $DOCKER_PWD
#            docker tag truck-api-framework:latest $DOCKER_USER/trucks
#            docker tag truck-api-framework:${CIRCLE_SHA1:0:6} $DOCKER_USER/trucks
#            docker push --all-tags $DOCKER_USER/trucks

workflows:
  build-openai-workflow:
    jobs:
      - build-openai
#      - sonar-scan
#      - build-docker:
#          requires:
#            - build-trucks
#            - sonar-scan

  nightly-workflow:
    jobs:
      - build-openai
    triggers:
      - schedule:
          cron: "30 2 * * *"
          filters:
            branches:
              only:
                - main
